{"ast":null,"code":"var _jsxFileName = \"/home/felipe/\\xC1rea de Trabalho/crud-reactjs/frontend/src/components/user/UserCrud.js\";\nimport React, { Component } from 'react';\nimport Main from '../templates/Main';\nimport axios from 'axios';\nconst headerProps = {\n  icon: 'users',\n  title: 'Usuários',\n  subtitle: 'Cadastro de usuários: Incluir, Listar, Alterar e Excluir'\n};\nconst baseUrl = 'http://localhost:3001/users';\nexport default class UserCrud extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      user: {\n        name: '',\n        email: ''\n      },\n      list: []\n    };\n\n    this.clear = () => {\n      this.setState({\n        user: {\n          name: '',\n          email: ''\n        }\n      });\n    };\n\n    this.save = () => {\n      const user = this.state.user;\n      const method = user.id ? 'put' : 'post';\n      const url = user.id ? `${baseUrl}/${user.id}` : baseURL;\n      axios[method](url, user).then(response => {\n        const list = this.getUpdatedList(response.data);\n        this.setState({\n          list\n        });\n        this.clear();\n      });\n    };\n\n    this.getUpdatedList = user => {\n      const list = this.state.list.filter(u => u.id !== user.id);\n      list.unshift(user);\n      return list;\n    };\n\n    this.updateField = event => {\n      const user = { ...this.state.user\n      };\n      user[event.target.name] = event.target.value;\n      this.setState({\n        user\n      });\n    };\n\n    this.renderForm = () => {};\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(Main, Object.assign({}, headerProps, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 13\n      }\n    }), \"Cadastro de usu\\xE1rio\");\n  }\n\n}","map":{"version":3,"sources":["/home/felipe/Área de Trabalho/crud-reactjs/frontend/src/components/user/UserCrud.js"],"names":["React","Component","Main","axios","headerProps","icon","title","subtitle","baseUrl","UserCrud","state","user","name","email","list","clear","setState","save","method","id","url","baseURL","then","response","getUpdatedList","data","filter","u","unshift","updateField","event","target","value","renderForm","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,MAAMC,WAAW,GAAG;AAChBC,EAAAA,IAAI,EAAE,OADU;AAEhBC,EAAAA,KAAK,EAAE,UAFS;AAGhBC,EAAAA,QAAQ,EAAE;AAHM,CAApB;AAMA,MAAMC,OAAO,GAAG,6BAAhB;AAEA,eAAe,MAAMC,QAAN,SAAuBR,SAAvB,CAAiC;AAAA;AAAA;AAAA,SAC5CS,KAD4C,GACpC;AACJC,MAAAA,IAAI,EAAE;AAAEC,QAAAA,IAAI,EAAE,EAAR;AAAYC,QAAAA,KAAK,EAAE;AAAnB,OADF;AAEJC,MAAAA,IAAI,EAAE;AAFF,KADoC;;AAAA,SAM5CC,KAN4C,GAMpC,MAAM;AACV,WAAKC,QAAL,CAAc;AAAEL,QAAAA,IAAI,EAAE;AAAEC,UAAAA,IAAI,EAAE,EAAR;AAAYC,UAAAA,KAAK,EAAE;AAAnB;AAAR,OAAd;AACH,KAR2C;;AAAA,SAU5CI,IAV4C,GAUrC,MAAM;AACT,YAAMN,IAAI,GAAI,KAAKD,KAAL,CAAWC,IAAzB;AACA,YAAMO,MAAM,GAAGP,IAAI,CAACQ,EAAL,GAAU,KAAV,GAAkB,MAAjC;AACA,YAAMC,GAAG,GAAGT,IAAI,CAACQ,EAAL,GAAW,GAAEX,OAAQ,IAAGG,IAAI,CAACQ,EAAG,EAAhC,GAAoCE,OAAhD;AACAlB,MAAAA,KAAK,CAACe,MAAD,CAAL,CAAcE,GAAd,EAAmBT,IAAnB,EACKW,IADL,CACUC,QAAQ,IAAI;AACd,cAAMT,IAAI,GAAG,KAAKU,cAAL,CAAoBD,QAAQ,CAACE,IAA7B,CAAb;AACA,aAAKT,QAAL,CAAc;AAAEF,UAAAA;AAAF,SAAd;AACA,aAAKC,KAAL;AACH,OALL;AAMH,KApB2C;;AAAA,SAsB5CS,cAtB4C,GAsB1Bb,IAAD,IAAU;AACvB,YAAMG,IAAI,GAAI,KAAKJ,KAAL,CAAWI,IAAX,CAAgBY,MAAhB,CAAuBC,CAAC,IAAIA,CAAC,CAACR,EAAF,KAASR,IAAI,CAACQ,EAA1C,CAAd;AACAL,MAAAA,IAAI,CAACc,OAAL,CAAajB,IAAb;AACA,aAAOG,IAAP;AACH,KA1B2C;;AAAA,SA4B5Ce,WA5B4C,GA4B7BC,KAAD,IAAW;AACrB,YAAMnB,IAAI,GAAG,EAAE,GAAG,KAAKD,KAAL,CAAWC;AAAhB,OAAb;AACAA,MAAAA,IAAI,CAACmB,KAAK,CAACC,MAAN,CAAanB,IAAd,CAAJ,GAA0BkB,KAAK,CAACC,MAAN,CAAaC,KAAvC;AACA,WAAKhB,QAAL,CAAc;AAAEL,QAAAA;AAAF,OAAd;AACH,KAhC2C;;AAAA,SAkC5CsB,UAlC4C,GAkC/B,MAAM,CAElB,CApC2C;AAAA;;AAsC5CC,EAAAA,MAAM,GAAI;AACN,wBACI,oBAAC,IAAD,oBAAU9B,WAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCADJ;AAKH;;AA5C2C","sourcesContent":["import React, { Component } from 'react';\nimport Main from '../templates/Main';\nimport axios from 'axios';\n\nconst headerProps = {\n    icon: 'users',\n    title: 'Usuários',\n    subtitle: 'Cadastro de usuários: Incluir, Listar, Alterar e Excluir'\n}\n\nconst baseUrl = 'http://localhost:3001/users';\n\nexport default class UserCrud extends Component {\n    state = {\n        user: { name: '', email: '' },\n        list: []\n    }\n\n    clear = () => {\n        this.setState({ user: { name: '', email: '' } })\n    }\n\n    save = () => {\n        const user  = this.state.user;\n        const method = user.id ? 'put' : 'post'\n        const url = user.id ? `${baseUrl}/${user.id}` : baseURL;\n        axios[method](url, user)\n            .then(response => {\n                const list = this.getUpdatedList(response.data);\n                this.setState({ list });\n                this.clear();\n            })\n    }\n\n    getUpdatedList = (user) => {\n        const list  = this.state.list.filter(u => u.id !== user.id);\n        list.unshift(user);\n        return list;\n    }\n\n    updateField = (event) => {\n        const user = { ...this.state.user };\n        user[event.target.name] = event.target.value;\n        this.setState({ user })\n    }\n\n    renderForm = () => {\n        \n    }\n\n    render () {\n        return (\n            <Main {...headerProps}>\n                Cadastro de usuário\n            </ Main>\n        )\n    }\n}"]},"metadata":{},"sourceType":"module"}