{"ast":null,"code":"var _jsxFileName = \"/home/felipe/\\xC1rea de Trabalho/crud-reactjs/frontend/src/pages/user/index.js\";\nimport React, { Component } from 'react';\nimport Main from '../../components/main/Main';\nimport axios from 'axios';\nconst headerProps = {\n  icon: 'users',\n  title: 'Usuários',\n  subtitle: 'Cadastro de usuários: Incluir, Listar, Alterar e Excluir'\n};\nconst baseUrl = 'http://localhost:3001/users';\nexport default class UserCrud extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      user: {\n        name: '',\n        email: ''\n      },\n      list: []\n    };\n\n    this.clear = () => {\n      this.setState({\n        user: {\n          name: '',\n          email: ''\n        }\n      });\n    };\n\n    this.save = () => {\n      const user = this.state.user;\n      const method = user.id ? 'put' : 'post';\n      const url = user.id ? `${baseUrl}/${user.id}` : baseUrl;\n      axios[method](url, user).then(response => {\n        const list = this.getUpdatedList(response.data);\n        this.setState({\n          list\n        });\n      });\n    };\n\n    this.getUpdatedList = (user, add = true) => {\n      const list = this.state.list.filter(u => u.id !== user.id);\n\n      if (add) {\n        list.unshift(user);\n      }\n\n      return list;\n    };\n\n    this.updateField = event => {\n      const user = { ...this.state.user\n      };\n      user[event.target.name] = event.target.value;\n      this.setState({\n        user\n      });\n    };\n\n    this.renderForm = () => {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"row\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-12 col-md-6\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 29\n        }\n      }, \"Nome\"), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"text\",\n        className: \"form-control\",\n        name: \"name\",\n        value: this.state.user.name,\n        onChange: e => this.updateField(e),\n        placeholder: \"Digite o nome\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 29\n        }\n      }))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-12 col-md-6\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 29\n        }\n      }, \"E-mail\"), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"text\",\n        className: \"form-control\",\n        name: \"email\",\n        value: this.state.user.email,\n        onChange: e => this.updateField(e),\n        placeholder: \"Digite o e-mail\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 29\n        }\n      })))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"row\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-12 d-flex justify-content-end\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        className: \"btn btn-primary\",\n        onClick: e => this.save(e),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 25\n        }\n      }, \"Salvar\"), /*#__PURE__*/React.createElement(\"button\", {\n        className: \"btn btn-secondary ml-2\",\n        onClick: e => this.clear(e),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 25\n        }\n      }, \"Cancelar\"))));\n    };\n\n    this.load = user => {\n      this.setState({\n        user\n      });\n    };\n\n    this.remove = user => {\n      axios.delete(`${baseUrl}/${user.id}`).then(() => {\n        const list = this.getUpdatedList(user, false);\n        this.setState({\n          list\n        });\n      });\n    };\n\n    this.renderTable = () => {\n      return /*#__PURE__*/React.createElement(\"table\", {\n        className: \"table mt-4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"thead\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 25\n        }\n      }, \"Nome\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 25\n        }\n      }, \"E-mail\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 25\n        }\n      }, \"A\\xE7\\xF5es\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 17\n        }\n      }, this.renderRows()));\n    };\n\n    this.renderRows = () => {\n      return this.state.list.map(user => {\n        return /*#__PURE__*/React.createElement(\"tr\", {\n          key: user.id,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(\"td\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 25\n          }\n        }, user.name), /*#__PURE__*/React.createElement(\"td\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 25\n          }\n        }, user.email), /*#__PURE__*/React.createElement(\"td\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 25\n          }\n        }, /*#__PURE__*/React.createElement(\"button\", {\n          className: \"btn btn-warning\",\n          onClick: () => this.load(user),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 29\n          }\n        }, /*#__PURE__*/React.createElement(\"i\", {\n          className: \"fa fa-pencil\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 33\n          }\n        })), /*#__PURE__*/React.createElement(\"button\", {\n          className: \"btn btn-danger ml-2\",\n          onClick: () => this.remove(user),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 29\n          }\n        }, /*#__PURE__*/React.createElement(\"i\", {\n          className: \"fa fa-trash\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 33\n          }\n        }))));\n      });\n    };\n  }\n\n  componentWillMount() {\n    axios(baseUrl).then(response => {\n      this.setState({\n        list: response.data\n      });\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(Main, Object.assign({}, headerProps, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 13\n      }\n    }), this.renderForm(), this.renderTable());\n  }\n\n}","map":{"version":3,"sources":["/home/felipe/Área de Trabalho/crud-reactjs/frontend/src/pages/user/index.js"],"names":["React","Component","Main","axios","headerProps","icon","title","subtitle","baseUrl","UserCrud","state","user","name","email","list","clear","setState","save","method","id","url","then","response","getUpdatedList","data","add","filter","u","unshift","updateField","event","target","value","renderForm","e","load","remove","delete","renderTable","renderRows","map","componentWillMount","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Main from '../../components/main/Main';\nimport axios from 'axios';\n\nconst headerProps = {\n    icon: 'users',\n    title: 'Usuários',\n    subtitle: 'Cadastro de usuários: Incluir, Listar, Alterar e Excluir'\n}\n\nconst baseUrl = 'http://localhost:3001/users';\n\nexport default class UserCrud extends Component {\n    state = {\n        user: { name: '', email: '' },\n        list: []\n    }\n\n    componentWillMount() {\n        axios(baseUrl).then(response => {\n            this.setState({ list: response.data })\n        });\n    }\n\n    clear = () => {\n        this.setState({ user: { name: '', email: '' } })\n    }\n\n    save = () => {\n        const user  = this.state.user;\n        const method = user.id ? 'put' : 'post'\n        const url = user.id ? `${baseUrl}/${user.id}` : baseUrl;\n        axios[method](url, user)\n            .then(response => {\n                const list = this.getUpdatedList(response.data);\n                this.setState({ list });\n            })\n    }\n\n    getUpdatedList = (user, add = true) => {\n        const list  = this.state.list.filter(u => u.id !== user.id);\n        if (add) {\n            list.unshift(user);\n        }\n        return list;\n    }\n\n    updateField = (event) => {\n        const user = { ...this.state.user };\n        user[event.target.name] = event.target.value;\n        this.setState({ user })\n    }\n\n    renderForm = () => {\n        return (\n            <div className=\"form\">\n                <div className=\"row\">\n                    <div className=\"col-12 col-md-6\">\n                        <div className=\"form-group\">\n                            <label>Nome</label>\n                            <input \n                                type=\"text\" \n                                className=\"form-control\" \n                                name=\"name\" \n                                value={this.state.user.name}\n                                onChange={e => this.updateField(e)}\n                                placeholder=\"Digite o nome\"\n                            />\n                        </div>\n                    </div>\n\n                    <div className=\"col-12 col-md-6\">\n                        <div className=\"form-group\">\n                            <label>E-mail</label>\n                            <input \n                                type=\"text\" \n                                className=\"form-control\" \n                                name=\"email\" \n                                value={this.state.user.email}\n                                onChange={e => this.updateField(e)}\n                                placeholder=\"Digite o e-mail\"\n                            />\n                        </div>\n                    </div>\n                </div>\n\n                <div className=\"row\">\n                    <div className=\"col-12 d-flex justify-content-end\">\n                        <button className=\"btn btn-primary\" onClick={e => this.save(e)}>\n                            Salvar\n                        </button>\n                        <button className=\"btn btn-secondary ml-2\" onClick={e => this.clear(e)}>\n                            Cancelar\n                        </button>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n\n    load = (user) => {\n        this.setState({ user })\n    }\n\n    remove = (user) => {\n        axios.delete(`${baseUrl}/${user.id}`)\n            .then(() => {\n                const list = this.getUpdatedList(user, false)\n                this.setState({ list })\n            })\n    }\n\n    renderTable = () => {\n        return (\n            <table className=\"table mt-4\">\n                <thead>\n                    <tr>\n                        <th>Nome</th>\n                        <th>E-mail</th>\n                        <th>Ações</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {this.renderRows()}\n                </tbody>\n            </table>\n        )\n    }\n\n    renderRows = () => {\n        return (\n            this.state.list.map(user => {\n                return (\n                    <tr key={user.id}>\n                        <td>{user.name}</td>\n                        <td>{user.email}</td>\n                        <td>\n                            <button className=\"btn btn-warning\" onClick={() => this.load(user)}>\n                                <i className=\"fa fa-pencil\"></i>\n                            </button>\n                            <button className=\"btn btn-danger ml-2\" onClick={() => this.remove(user)}>\n                                <i className=\"fa fa-trash\"></i>\n                            </button>\n                        </td>\n                    </tr>\n                )\n            })\n        )\n    }\n\n    render () {\n        return (\n            <Main {...headerProps}>\n               {this.renderForm()}\n               {this.renderTable()}\n            </ Main>\n        )\n    }\n}"]},"metadata":{},"sourceType":"module"}